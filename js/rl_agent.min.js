class RLAgent{constructor(){this.model=this.createModel(),this.learningRate=.001,this.discountFactor=.95,this.epsilon=1,this.epsilonDecay=.995,this.epsilonMin=.01}createModel(){const e=tf.sequential();return e.add(tf.layers.dense({inputShape:[8],units:64,activation:"relu"})),e.add(tf.layers.dense({units:64,activation:"relu"})),e.add(tf.layers.dense({units:6,activation:"linear"})),e.compile({optimizer:tf.train.adam(this.learningRate),loss:"meanSquaredError"}),e}chooseAction(e){return Math.random()<=this.epsilon?Math.floor(6*Math.random()):tf.tidy((()=>this.model.predict(tf.tensor2d([e])).argMax(1).dataSync()[0]))}async train(e,t){if(e.length<TRAINING_BATCH_SIZE)return;const o=e.map((e=>e.state)),i=e.map((e=>e.action)),s=e.map((e=>e.reward)),a=e.map((e=>e.nextState)),n=e.map((e=>e.done)),l=tf.tensor2d(o,[e.length,8]),r=tf.tensor1d(i,"int32"),d=tf.tensor1d(s,"float32"),c=tf.tensor2d(a,[e.length,8]),h=tf.tensor1d(n,"bool"),m=t.predict(c),p=m.max(1),f=h.logicalNot(),g=d.add(p.mul(this.discountFactor).mul(f)),u=this.model.predict(l),w=tf.oneHot(r,6),y=tf.sub(1,w),M=u.mul(y).add(w.mul(g.expandDims(1)));await this.model.fit(l,M,{epochs:1,verbose:0,callbacks:{onTrainEnd:()=>{tf.dispose([l,r,d,c,h,m,p,f,g,u,w,y,M])}}}),this.epsilon>this.epsilonMin&&(this.epsilon*=this.epsilonDecay)}updateTargetModel(e){e.setWeights(this.model.getWeights())}async saveModel(){await this.model.save("downloads://air-hockey-ai-model");const e=new Blob([this.epsilon.toString()],{type:"text/plain"}),t=window.URL.createObjectURL(e),o=document.createElement("a");o.style.display="none",o.href=t,o.download="air-hockey-ai-epsilon.txt",document.body.appendChild(o),o.click(),window.URL.revokeObjectURL(t),o.remove(),console.log("%cAI Model and Epsilon Saved for Download!","color: lightgreen; font-weight: bold;"),showMessage("فایل‌های هوش مصنوعی آماده دانلود!","#02ffa0")}async loadModel(e){if(!e||!e.jsonFile||!e.weightsFile)return console.error("JSON or BIN file is missing."),showMessage("فایل JSON یا BIN یافت نشد!","red"),!1;try{if(this.model=await tf.loadLayersModel(tf.io.browserFiles([e.jsonFile,e.weightsFile])),this.model.compile({optimizer:tf.train.adam(this.learningRate),loss:"meanSquaredError"}),e.epsilonFile){const t=await e.epsilonFile.text();this.epsilon=parseFloat(t)}return console.log("%cAI Model Loaded Successfully from files!","color: cyan; font-weight: bold;"),showMessage("هوش مصنوعی بارگذاری شد!","#56ccf2"),!0}catch(e){return console.error("Error loading model from files:",e),showMessage("خطا در بارگذاری فایل!","red"),!1}}}